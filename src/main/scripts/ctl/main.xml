<?xml version="1.0" encoding="utf-8"?>
<ctl:package
                  xmlns="http://www.occamlab.com/ctl"
                  xmlns:main="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/main.xml"
                  xmlns:ctl="http://www.occamlab.com/ctl"
                  xmlns:xi="http://www.w3.org/2001/XInclude"
                  xmlns:wfs="http://www.opengis.net/wfs">

  <xi:include href="wfs.xml" />

  <suite name="wfs:main_wfs">
    <title>Web Feature Service (WFS) 1.0.0</title>
    <description>Validates that a WFS 1.0.0 is compliant.</description>
    <starting-test>wfs:main</starting-test>
    <!--<ctl:link>data/data-wfs-1.0.0.zip</ctl:link>-->
    <ctl:form xmlns="">
      <body>
        <h3>Web Features Service 1.0.0</h3>
        <p>The following options are only concerned with the Web Features
          Service tests
        </p>
        <p>The Web Feature Service tests scripts are designed to test WFS
          implementations based on the WFS 1.0.0 specification.
        </p>
        <p>The test engine will read the capabilities document from the
          server and use the values in this document to identify the tests
          that are to be run. A sample capabilities document can be obtained
          at
          <a target="_blank" href="../../../about/wfs/1.0.0/web/OGCTestData/wfs/1.0.0/data/WfsCapabilities.xml">
            WfsCapabilities.xml
          </a>
        </p>
        <p>The GML schemas for the test features can be downloaded from
          <a target="_blank" href="../../../about/wfs/1.0.0/web/OGCTestData/wfs/1.0.0/schemas/dataFeatures.xsd">
            dataFeatures.xsd</a>,
          <a target="_blank" href="../../../about/wfs/1.0.0/web/OGCTestData/wfs/1.0.0/schemas/geometryFeatures.xsd">
            geometryFeatures.xsd
          </a>
          and
          <a target="_blank" href="../../../about/wfs/1.0.0/web/OGCTestData/wfs/1.0.0/schemas/complexFeatures.xsd">
            complexFeatures.xsd
          </a>
          and loaded into the WFS before executing the tests for the first
          time.
        </p>
        <p>The tests for a basic WFS require test data to be loaded before
          the tests are run, this test data is not changed by the tests so
          will only need to be only loaded once. The test data can be
          downloaded as a WFS transaction with GML from <a target="_blank"
                                                           href="../../../about/wfs/1.0.0/web/OGCTestData/wfs/1.0.0/data/wfsBasicTestData.xml">
            Wfs basic test
            data
          </a> and <a target="_blank"
                      href="../../../about/wfs/1.0.0/web/OGCTestData/wfs/1.0.0/data/wfsComplexTestData.xml">Wfs complex
            value test data
          </a> (if complex values are supported, see checkbox
          below to enable these tests).
        </p>
        <p>The tests for a transactional and locking WFS require test data
          to be loaded before the tests are run, this test data is changed by
          the tests so will need to be loaded before every test run. The test
          data can be downloaded as a WFS transaction with GML from <a target="_blank"
                                                                       href="../../../about/wfs/1.0.0/web/OGCTestData/wfs/1.0.0/data/wfsLockTestData.xml">
            Wfs lock test
            data
          </a> and
          <a target="_blank" href="../../../about/wfs/1.0.0/web/OGCTestData/wfs/1.0.0/data/wfsTransactionTestData.xml">
            Wfs
            transaction test data
          </a>
        </p>
        <p>
          <strong>Note:</strong>
          All test data are also available in a single <a target="_blank"
                                                          href="../../../about/wfs/1.0.0/web/data/data-wfs-1.0.0.zip">
          ZIP archive</a>.
        </p>
        <p>Each of the above schemas use a different namespace, if your
          product only supports a single namespace you may run the tests
          multiple times, once for each dataset and then combine the passes
          from each run to generate your final score. The OGC does however
          recommend that vendors implement multiple namespace support.
        </p>
        <p>The orginal Filter 1.0.0 specification describes the DWithin
          operator but did not include this in the capabilities schema in the
          specification. This was an oversight and the official schemas on
          <a href="http://schemas.opengis.net">http://schemas.opengis.net</a>
          have been updated to include this operator. The CITE tests use this
          schema for validation of the capabilities document.
        </p>
        <br />
        <br />
        <h4>Capabilities Setup</h4>
        <br />
        <br />
        <p>The capabilities document specified will be used to identify the
          tests that should be run based on the capabilities of the server
          under test.
        </p>
        <blockquote>
          <table border="3" padding="3">
            <tr>
              <td align="center">
                <input name="capabilities-url" size="80" type="text" value="" />
              </td>
              <td align="left" />
            </tr>
          </table>
        </blockquote>
        <h4>Optional tests</h4>
        <br />
        <br />
        <p>The following options can be used to specify additional tests
          that can be run that are cannot be identified from the capabilities
          document.
        </p>
        <blockquote>
          <table border="3" padding="3">
            <tr>
              <td align="center">
                <input name="complexvalue" type="checkbox" value="complexvalue" />
              </td>
              <td align="left">Enable tests with complex property values</td>
            </tr>
            <tr>
              <td align="center">
                <input name="multiplenamenspaces" type="checkbox" value="multiplenamenspaces" checked="checked" />
              </td>
              <td align="left">Enable tests with multiple namespaces</td>
            </tr>
          </table>
        </blockquote>
        <input type="submit" value="OK" />
      </body>
    </ctl:form>
  </suite>

</ctl:package>